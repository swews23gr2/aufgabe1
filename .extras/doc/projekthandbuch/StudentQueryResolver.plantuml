@startuml Controller-Klasse

interface Promise<T>

package @nestjs/graphql {
  class "@Resolver" as Resolver
  hide Resolver circle

  class "@UseInterceptors" as UseInterceptors
  hide UseInterceptors circle

  class "@Query" as Query
  hide Query circle

  class "@Args" as Args
  hide Args circle

  Resolver .left[hidden].> Promise
}

package student {
  package entity {
    class Student <<entity>>
  }

  package service {
    class StudentReadService << control >>
  }

  package graphql #DDDDDD {
    class "type StudentDTO = Omit<Student, 'faecher' | 'aktualisiert' | 'erzeugt'" as StudentDTO
    hide StudentDTO circle

    interface IdInput {
        id: number
    }

    class StudentQueryResolver << control >> << @Resolver() >> << @UseInterceptors() >> {
      + @Query() async student(@Args() id: IdInput): Promise<StudentDTO>
      + @Query() async studenten(@Args() titel: string | undefined): Promise<StudentDTO[]>
    }

    StudentQueryResolver o-up-> "1" StudentReadService : service
    StudentQueryResolver ..> StudentDTO
    StudentQueryResolver ..> IdInput
    StudentDTO ..> Student
    StudentQueryResolver ..> Resolver

    StudentQueryResolver ..> Promise

    StudentDTO .[hidden].> Student
    Student .[hidden].> Promise
    StudentReadService .[hidden].> Promise
    Student .[hidden].> Resolver
    StudentReadService .[hidden].> Resolver
  }
}

hide empty members

@enduml
